---
title: "MATH3091: Computer Lab 07"
format: 
  html:
    css: styles.css
---

```{r setup, echo = FALSE, include = FALSE}
#| echo: TRUE
#| output: TRUE
#| message: FALSE

knitr::opts_chunk$set(include = TRUE, fig.width = 6, fig.height = 4, fig.align = "center")
```

## Exploring the data

Load the data in `heart.csv` into a variable `heart`.
```{r}
heart <- read.csv("../datasets/heart.csv") # Change the path, if needed
head(heart)
```

This dataset contains the results of a clinical trial to assess the effectiveness of a thrombolytic (clot-busting) treatment for patients who have suffered an acute myocardial infarction (heart attack).

The explanatory variables are

- The `site` of infarction: anterior, inferior or other. 
- The `time` between infarction and treatment: $\le 12$ or $>12$ hours
- Whether the patient was already taking Beta-blocker medication prior to the infarction, `blocker`: yes or no
- The `treatment` the patient was given: active or placebo.

For each combination of these categorical variables, the dataset gives the total number of patients (`n_patients`), and the number who survived for for 35 days (`n_survived`).

[Make plots of the proportion of patients who survived for 35 days against each of the explanatory variables.]{.attention} The resulting plots should look like the following
```{r, echo = FALSE, fig.width = 10, fig.height = 6, fig.align = "center"}
# Plot the proportion of patients who survived against each of the explanatory variables
heart$proportion <- with(heart, n_survived / n_patients)
heart_agg <- apply(heart[, 4:7], 2, function(x) aggregate(proportion ~ x, data = heart, FUN = mean))
par(mfrow = c(2, 2))
invisible(lapply(1:4, function(x) barplot(heart_agg[[x]][, 2], ylim = c(0, 1), ylab = "Proportion", 
                                          names.arg = heart_agg[[x]][, 1], main = names(heart_agg)[x])))
par(mfrow = c(1, 1))
```

## GLMs with factors

We abbreviate `site` to $S$, `time` to $T$, `blocker` to $B$ and `treatment` to $R$ in our mathematical descriptions of various possible models for this data.

We refer to categorical explanatory variables as **factors**, and factorial models can include **main effects** and **interactions**. For example, a logistic regression model which allows `n_survived` to depend on `site`, `treatment` and an interaction between these two factors is
$$
Y_i|n_i, p_i\sim\;{\rm Binomial}(n_i,p_i),\ \ \
\log\left({{p_i}\over{1-p_i}}\right)=\alpha+\beta_S(s_i)
+\beta_{R}(r_i)+\gamma_{S,R}(s_i,r_i), \ \  i=1,\cdots ,24.
$$

where $s_i$ is the level of `site`, and $r_i$ is the level of `treatment` for the $i$-th observation; $p_i$ is the probability of surviving at least 35 days and $n_i$ is the number of patients in the $i$-th group. 

Here $\beta_{S}$, the main effect of `site`, takes different values depending on the level of `site`, so in principle $\beta_{S}$ takes three values, $\beta_{S}(\text{anterior})$, $\beta_{S}(\text{inferior})$ and $\beta_{S}(\text{other})$. Similarly,  $\beta_{R}$ depends on the level of `treatment` (two values) and $\gamma_{S,R}$ depends jointly on the levels of `site` and `treatment` (six values).

We could fit this model in `R` using `glm`.
```{r}
# Fit a logistic regression of proportion of patients who survive on site, treatment, and an interaction between site and treatment.
mod_SR <- glm(n_survived / n_patients  ~ site + treatment + site:treatment, family = binomial, weights = n_patients, data = heart)
summary(mod_SR)
```

The model is overparameterised (if we examined the $\mathbf{X}$ matrix, there would be obvious linear dependencies among the columns). By default, `R` constrains any main effect to be equal to $0$ at the first level of a factor. If the factor levels are not labelled numerically, `R` interprets the "first" level to be the first in alphabetical order. In this case, the first level of `site` is "anterior", and the first level of `treatment` is "active", so the intercept in `mod_SR` represents the linear predictor for patients with an infarction in the anterior site, who are given the active treatment.

When specifying models with interactions between factors, one rule which must be followed is the **principle of marginality**, which states that whenever an interaction is present in a model, all **marginal** main effects and interactions must also be present. For example, if we include the `site:treatment` interaction, then the main effects of `site` and `treatment` must also be in the model, as in `mod_SR`. A useful shorthand permitted by `R` is `site * treatment`, which represents the interaction `site:treatment` together with all its marginal terms.

```{r}
# Alternatively, specify the main and interaction effects in one term (`site * treatment`)
mod_SR_2 <- glm(n_survived / n_patients  ~ site * treatment, family = binomial, weights = n_patients, data = heart)
```

[Check that `mod_SR` and `mod_SR_2` are equivalent.]{.alert}
```{r}
# The same terms are included in both cases.
summary(mod_SR)
summary(mod_SR_2)
```

The concept of interaction can be extended when we have three or more factors. For example, a **three-factor interaction** allows the response to depend jointly on three factors. For example, we could fit a three-factor interaction between `site`, `blocker`, and `treatment`.

```{r}
# Fit a three-factor interaction between `site`, `blocker`, and `treatment`.
mod_SBR <- glm(n_survived / n_patients  ~ site * blocker * treatment, family = binomial, weights = n_patients, data = heart)
summary(mod_SBR)
```

By default, `R` constrains any interaction to be equal to $0$ for all combinations where any of the factors are at their first level. Hence, the main effect `site` involves $3 - 1 = 2$ free coefficients, the interaction `site:treatment` involves $(3-1)(2-1) = 2$ free coefficients, `site:blocker:treatment` involves $(3-1)(2-1)(2-1) = 2$ free coefficients, and so on. By the principle of marginality, if we include the three-factor interaction `site:blocker:treatment`, the main effects `site`, `blocker` and `treatment`, and the interactions `site:blocker`, `site:treatment` and `blocker:treatment` must all be present. Specifying the model with `site * blocker * treatment` ensures that all of these terms are included.

## Model selection

There are many possible models that we could consider, with many possible interaction terms. Let us start with a model including a main effect for each explanatory variable, but no interaction terms.

```{r}
# Fit a logistic regression with all main effects, but no interactions:
mod_S_T_B_R <- glm(n_survived / n_patients  ~ site + time + blocker + treatment, family = binomial, weights = n_patients, data = heart)
summary(mod_S_T_B_R)
```

[Starting at this model, conduct hypothesis tests to see whether you could drop any of the main effects.
For the remaining main effects, try adding interactions between pairs of variables, and conduct hypothesis test of whether or not each of these possible two-factor interactions is needed. If you include more than one two-factor interaction, check to see if any three-factor interactions are required.]{.attention}

```{r}
# Hypothesis test of each main effect.
anova(mod_S_T_B_R, test = "LRT")
# We should include `site`, `blocker` and `treatment`, but don't need to include `time`
mod_S_B_R <- glm(n_survived / n_patients ~ site + blocker + treatment, family = binomial, weights = n_patients, data = heart)
anova(mod_S_B_R, test = "LRT")
# We should keep all of the remaining main effects.

# We should now consider potential interactions between the main effects.

# Possible two-factor interactions: `site * blocker`, `site * treatment`, `blocker * treatment`.
mod_SB_R <- glm(n_survived / n_patients  ~ site * blocker + treatment, family = binomial, weights = n_patients, data = heart)
anova(mod_S_B_R, mod_SB_R, test = "LRT")
# Interaction `site:blocker` not needed.

mod_SR_B <- glm(n_survived / n_patients  ~ site * treatment + blocker, family = binomial, weights = n_patients, data = heart)
anova(mod_S_B_R, mod_SR_B, test = "LRT")
# Interaction `site:treatment` not needed.

mod_S_BR <- glm(n_survived / n_patients  ~ site + blocker * treatment, family = binomial, weights = n_patients, data = heart)
anova(mod_S_B_R, mod_S_BR, test = "LRT")
# Interaction `blocker:treatment` not needed.

# So we prefer `mod_S_B_R` as our final model.
```

At the end of this process, using a $5\%$ significance level, you should find that the preferred model is 
$$
Y_i|n_i, p_i\sim\;{\rm Binomial}(n_i,p_i),\ \ \
\log\left({{p_i}\over{1-p_i}}\right)=\alpha+\beta_S(s_i)+\beta_B(b_i)
+\beta_{R}(r_i), \ \  i=1,\cdots ,24.
$$
where $s_i$ is the level of `site`, $b_i$ is the level of `blocker`, and $r_i$ is the level of `treatment` for the $i$-th observation.

```{r, include = T}
mod_final <- glm(n_survived / n_patients  ~ treatment + blocker + site,
                 family = binomial, weights = n_patients, data = heart)
summary(mod_final)
```

An alternative way to try to find the best model is to start with the model including all possible interactions between all the explanatory variables.
```{r}
# Fit the saturated model with all interaction terms.
mod_STBR <- glm(n_survived / n_patients  ~ site * time * blocker * treatment, family = binomial, weights = n_patients, data = heart)
```

You can then perform likelihood ratio tests of whether you can drop each of the terms in the model.
```{r}
# Test whether each term is needed in the model.
anova(mod_STBR, test = "LRT")
```

Remember that the principle of marginality says that **you should only drop a term if you have already dropped all higher-order interactions involving that term**. [What is your preferred model on the basis of this? Check that you understand the hypothesis tests corresponding to each row of the table given by the `anova` call. For example, what is the hypothesis test being conducted at the last row of the table (`site:time:blocker:treatment`)?  What about at the sixth row (`site:time`)?]{.attention}

```{r, include = FALSE}
# The last row compares the models
# H_0: all interactions betweeen three variables: STB, STR, SBR, TBR against
# H_1: all possible interactions (STBR)
# Or mathematically: H_0: gamma_{STBR}(s, t, b, r) = 0 against
# H_1: gamma_{STBR}(s, t, b, r) is unrestricted.

# The sixth row compares the models
# H_0: all main effects only (S, T, B, R) against
# H_1: interaction between site and time (ST)
# Or mathematically: H_0: gamma_{ST}(s, t) = 0 against
# H_1: gamma_{ST}(s, t) is unrestricted.

# The preferred model is again one with main effects for `site`, `blocker` and `treatment`, and no interactions (as `mod_final` above)
```

The scaled deviance (called "Residual deviance" in the output of `summary(mod_final)` above) provides one check of the model fit. In this case the scaled deviance is 15.86, which is less than $30.14$ $($the $95\%$ point of $\chi^2_{19})$ so the scaled deviance does not provide any evidence of poor model fit.

## Prediction and interpretation

Consider a patient who had an anterior infarction and was not previously taking Beta-blockers. [What is your estimate of the probability they will survive for 35 days if they are given the active treatment? What is your estimate of this probability if they are given the placebo? Find confidence intervals for both probabilities.]{.attention}

```{r}

# Make predictions for a patient with anterior infarction, no beta blockers.

newdata_active <- data.frame(site = "anterior", blocker = "no", treatment = "active")
p_hat_active   <- predict(mod_final, newdata = newdata_active, type = "response")
# Estimated probability of survival given active treatment is ~90%
p_hat_active

newdata_placebo <- data.frame(site = "anterior", blocker = "no", treatment = "placebo")
p_hat_placebo <- predict(mod_final, newdata = newdata_placebo, type = "response")
# Estimated probability of survival given placebo treatment is ~87%
p_hat_placebo

# Find a confidence interval for probability of survival given active treatment.
pred_eta_active <- predict(mod_final, newdata = newdata_active, se.fit = TRUE)
CI_eta_active <- c(pred_eta_active$fit - qnorm(0.975) * pred_eta_active$se.fit, 
                   pred_eta_active$fit + qnorm(0.975) * pred_eta_active$se.fit)
CI_p_active <- exp(CI_eta_active) / (1 + exp(CI_eta_active))
CI_p_active

# Find a confidence interval for probability of survival given placebo treatment.
pred_eta_placebo <- predict(mod_final, newdata = newdata_placebo, se.fit = TRUE)
CI_eta_placebo <- c(pred_eta_placebo$fit - qnorm(0.975) * pred_eta_placebo$se.fit, 
                   pred_eta_placebo$fit + qnorm(0.975) * pred_eta_placebo$se.fit)
CI_p_placebo <- exp(CI_eta_placebo) / (1 + exp(CI_eta_placebo))
CI_p_placebo
```

Qualitatively this model suggests that probability of 35 day survival is enhanced by the thrombotic treatment $(\text{logit}(p)$, and therefore $p$, is significantly lower for the placebo$)$. As we see from the estimated probabilities, while this treatment effect is significant, the size of the change in probability of survival is fairly small. We also see that probability of survival is significantly higher for those whose site of infarction is "inferior". This is the most pronounced effect. There is no real significant difference between the other sites. Patients who were on prior beta blocker medication also have a lower probability of survival.

